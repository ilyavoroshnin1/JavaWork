package Lesson5;

public class MathOperationgs {
    //создать метод, в который мы передаем 3 стороны треугольника
    // а метод печатает вид треугольника

    /**
     * Из чего состоит формула СОЗДАНИЯ МЕТОДА!!!
     * 1 - модификатор доступа или регулировка области видимости данного метода:
     * а) public - доступ внутри всего проекта
     * б) private - доступ внутри текущего файла
     * в) _______ - доступ внутри текущего пакета (папки) и наследника данного файла
     * г) protected - доступ доступ внутри текущего файла и наследника данного файла
     * <p>
     * 2 - static (либо пишется, либо нет) // если есть к кому то конкретному обращение, тогда пишется. Если в целом обращение, тогда не пишется.
     * <p>
     * 3 - возвращаемый тип (void - команда без обратного ответа, ничего не вернуть) (int или другие - нужна доп команды, когда приходит ответ)
     * <p>
     * 4 - название метода (команды). Например "printTypeOfTriangle - напечатай вид треугольника"
     * <p>
     * 5 - входящие параметры (то, без чего невозможно выполнить данное действие, пишется в скобках)
     * <p>
     * 6 - тело выполнения метода (то, что нужно сделать с входящими параметрами)
     */

    /**
     * Как вызывать методы со словом "STATIC" и без?
     * Когда слово ЕСТЬ: пишем название файла, в котором есть этот метод, после ставим точку и выбираем  \MathOperationgs. printTypeOfTriangle/
     *
     * Когда слова нет "Scanner stolbiki = new Scanner(System.in);
     *             int x = stolbiki.printTypeOfTriangle();
     *             Создается новый тип и уже у этого типа можно через точку вызывать наш метод
     */


    /**
     * Если вместо \void/ будет написано \int, double и прочее/, тогда в \return/ нужно будет вписать то, что нужно возвращать!!!
     */


    public static void printTypeOfTriangle(int a, int b, int c) { // проверка вида треугольника
        // 3 3 6     5 7 1        5 5 21
        if (a + b <= c || b + c <= a || c + a <= b) {
            System.out.println("Такого треугольника не существует");
            return;
        }
        if (a == b && b == c && c == a) {
            System.out.println("Это равносторонний трегольник");
        } else if (a != b && a != b && a != b) {
            System.out.println("Это разносторонний треугольник");
        } else {
            System.out.println("это равнобедренный");
        }
    }

    /**
     * в метод мы передаем 3 стороны треугольника и метод возвращает значение площади
     */

    public static double ploshadTriangle(int a, int b, int c) {

        double p = 0.5 * (a + b + c);
        double s = Math.sqrt(p * (p - a) * (p - b) * (p - c));
        return s;
    }

    public static double ploshadTriangle(int osnovanie, int vysota) {
        double s = 0.5 * osnovanie * vysota;
        return s;

    }

}




